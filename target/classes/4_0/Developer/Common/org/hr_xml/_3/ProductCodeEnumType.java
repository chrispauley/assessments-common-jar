//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.15 at 03:08:51 PM EST 
//


package org.hr_xml._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ProductCodeEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ProductCodeEnumType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Life Insurance"/>
 *     &lt;enumeration value="Accidental Death and Dismemberment Insurance"/>
 *     &lt;enumeration value="Long-Term Disability Insurance"/>
 *     &lt;enumeration value="Short-Term Disability Insurance"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ProductCodeEnumType", namespace = "http://www.hr-xml.org/3")
@XmlEnum
public enum ProductCodeEnumType {

    @XmlEnumValue("Life Insurance")
    LIFE_INSURANCE("Life Insurance"),
    @XmlEnumValue("Accidental Death and Dismemberment Insurance")
    ACCIDENTAL_DEATH_AND_DISMEMBERMENT_INSURANCE("Accidental Death and Dismemberment Insurance"),
    @XmlEnumValue("Long-Term Disability Insurance")
    LONG_TERM_DISABILITY_INSURANCE("Long-Term Disability Insurance"),
    @XmlEnumValue("Short-Term Disability Insurance")
    SHORT_TERM_DISABILITY_INSURANCE("Short-Term Disability Insurance");
    private final String value;

    ProductCodeEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ProductCodeEnumType fromValue(String v) {
        for (ProductCodeEnumType c: ProductCodeEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

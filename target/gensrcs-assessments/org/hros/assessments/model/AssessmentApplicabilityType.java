//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.17 at 03:34:39 PM EST 
//


package org.hros.assessments.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AssessmentApplicabilityType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AssessmentApplicabilityType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="descriptions" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="assessmentTypeCodes" type="{}AssessmentTypeCodeEnumType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="assessedCompetencies" type="{}SpecifiedCompetencyType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="jobCategoryCodes" type="{}CodeType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="careerLevelCode" type="{}CareerLevelCodeType" minOccurs="0"/&gt;
 *         &lt;element name="applicableRegions" type="{}JurisdictionType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="availableLanguageCodes" type="{}LanguageCodeList" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AssessmentApplicabilityType", propOrder = {
    "descriptions",
    "assessmentTypeCodes",
    "assessedCompetencies",
    "jobCategoryCodes",
    "careerLevelCode",
    "applicableRegions",
    "availableLanguageCodes"
})
public class AssessmentApplicabilityType {

    protected List<String> descriptions;
    @XmlSchemaType(name = "normalizedString")
    protected List<AssessmentTypeCodeEnumType> assessmentTypeCodes;
    protected List<SpecifiedCompetencyType> assessedCompetencies;
    protected List<CodeType> jobCategoryCodes;
    @XmlSchemaType(name = "normalizedString")
    protected CareerLevelCodeType careerLevelCode;
    protected List<JurisdictionType> applicableRegions;
    @XmlSchemaType(name = "normalizedString")
    protected List<LanguageCodeList> availableLanguageCodes;

    /**
     * Gets the value of the descriptions property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the descriptions property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescriptions().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getDescriptions() {
        if (descriptions == null) {
            descriptions = new ArrayList<String>();
        }
        return this.descriptions;
    }

    /**
     * Gets the value of the assessmentTypeCodes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the assessmentTypeCodes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAssessmentTypeCodes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AssessmentTypeCodeEnumType }
     * 
     * 
     */
    public List<AssessmentTypeCodeEnumType> getAssessmentTypeCodes() {
        if (assessmentTypeCodes == null) {
            assessmentTypeCodes = new ArrayList<AssessmentTypeCodeEnumType>();
        }
        return this.assessmentTypeCodes;
    }

    /**
     * Gets the value of the assessedCompetencies property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the assessedCompetencies property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAssessedCompetencies().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SpecifiedCompetencyType }
     * 
     * 
     */
    public List<SpecifiedCompetencyType> getAssessedCompetencies() {
        if (assessedCompetencies == null) {
            assessedCompetencies = new ArrayList<SpecifiedCompetencyType>();
        }
        return this.assessedCompetencies;
    }

    /**
     * Gets the value of the jobCategoryCodes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the jobCategoryCodes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getJobCategoryCodes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodeType }
     * 
     * 
     */
    public List<CodeType> getJobCategoryCodes() {
        if (jobCategoryCodes == null) {
            jobCategoryCodes = new ArrayList<CodeType>();
        }
        return this.jobCategoryCodes;
    }

    /**
     * Gets the value of the careerLevelCode property.
     * 
     * @return
     *     possible object is
     *     {@link CareerLevelCodeType }
     *     
     */
    public CareerLevelCodeType getCareerLevelCode() {
        return careerLevelCode;
    }

    /**
     * Sets the value of the careerLevelCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link CareerLevelCodeType }
     *     
     */
    public void setCareerLevelCode(CareerLevelCodeType value) {
        this.careerLevelCode = value;
    }

    /**
     * Gets the value of the applicableRegions property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the applicableRegions property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getApplicableRegions().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JurisdictionType }
     * 
     * 
     */
    public List<JurisdictionType> getApplicableRegions() {
        if (applicableRegions == null) {
            applicableRegions = new ArrayList<JurisdictionType>();
        }
        return this.applicableRegions;
    }

    /**
     * Gets the value of the availableLanguageCodes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the availableLanguageCodes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAvailableLanguageCodes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LanguageCodeList }
     * 
     * 
     */
    public List<LanguageCodeList> getAvailableLanguageCodes() {
        if (availableLanguageCodes == null) {
            availableLanguageCodes = new ArrayList<LanguageCodeList>();
        }
        return this.availableLanguageCodes;
    }

}
